name: CI/CD Pipeline

on:
  push:
    branches:
      - main
    paths:
      - 'index.js'


jobs:
  build-and-deploy:
    name: Build, Push, and Deploy to AWS
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Build Docker Image
        run: docker build -t eyego-devops-task:latest .

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Push Docker Image to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

          docker tag eyego-devops-task:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/eyego-devops-task:latest
          
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/eyego-devops-task:latest

      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }}

      - name: Deploy to EKS
        run: |
          kubectl create namespace eyego || true
          
          kubectl apply -f k8s/ -n eyego

      - name: Force rollout of the Deployment
        run: |
          kubectl rollout restart deployment eyego-app -n eyego
          
      - name: Verify the Deployment
        run: |
          
          kubectl get pods -n eyego

          kubectl get svc -n eyego

          kubectl get deployments -n eyego


          
