name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    name: Build, Push, and Deploy to AWS
    runs-on: ubuntu-latest

    env:
      AWS_REGION: eu-north-1
      ECR_REPOSITORY: eyego-devops-task
      CLUSTER_NAME: eyego-eks-cluster
      K8S_NAMESPACE: eyego

    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # Install dependencies
      - name: Install Dependencies
        run: npm install

      # Build the Docker image
      - name: Build Docker Image
        run: docker build -t $ECR_REPOSITORY:latest .

      # Configure AWS credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Tag and push the Docker image to ECR
      - name: Push Docker Image to ECR
        run: |
          IMAGE_URI=$(aws ecr describe-repositories --repository-names $ECR_REPOSITORY --region $AWS_REGION --query "repositories[0].repositoryUri" --output text)
          docker tag $ECR_REPOSITORY:latest $IMAGE_URI:latest
          docker push $IMAGE_URI:latest
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # Configure kubectl
      - name: Configure kubectl
        run: |
          aws eks update-kubeconfig --region $AWS_REGION --name $CLUSTER_NAME
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # Deploy to Kubernetes
      - name: Deploy to Kubernetes
        run: |
          kubectl set image deployment/eyego-app eyego-app=$IMAGE_URI:latest -n $K8S_NAMESPACE
          kubectl rollout status deployment/eyego-app -n $K8S_NAMESPACE
        env:
          IMAGE_URI: ${{ steps.login-ecr.outputs.image }}
